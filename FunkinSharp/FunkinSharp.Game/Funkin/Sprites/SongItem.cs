using System;
using osu.Framework.Graphics;
using osu.Framework.Graphics.Containers;
using osu.Framework.Graphics.Shapes;
using osu.Framework.Graphics.Sprites;
using osu.Framework.Input.Events;
using osuTK;

namespace FunkinSharp.Game.Funkin.Screens
{
    public partial class SongSelector
    {
        private partial class SongItem : Container
        {
            public readonly BasicMetadata Metadata;
            public Action<SongItem> OnItemClick;

            public readonly Box BG;

            public Colour4 SelectedColor => Colour4.SlateGray;
            public Colour4 DefaultColor => Colour4.SlateBlue;
            private float defaultMargin = 16.0f;

            protected override bool OnClick(ClickEvent e)
            {
                OnItemClick?.Invoke(this);
                return base.OnClick(e);
            }

            public SongItem(Container parent, BasicMetadata metadata)
            {
                Margin = new MarginPadding(defaultMargin);
                AutoSizeAxes = Axes.Both;
                Metadata = metadata;

                AddInternal(new Container
                {
                    AutoSizeAxes = Axes.Both,
                    Children = new Drawable[]
                    {
                        new Container
                        {
                            Masking = true,
                            CornerRadius = 7.5f,
                            AutoSizeAxes = Axes.Both,
                            Child = BG = new Box
                            {
                                Colour = DefaultColor,
                                Size = new Vector2(parent.DrawWidth - defaultMargin * 2, 78),
                                Alpha = 0.65f
                            }
                        },
                        new SpriteText
                        {
                            Margin = new MarginPadding(defaultMargin / 2),
                            Font = new FontUsage(family: "RedHatDisplay", size: 36, weight: "Bold"),
                            Text = metadata.SongName
                        },
                        new SpriteText
                        {
                            Margin = new MarginPadding(defaultMargin / 2),
                            Font = new FontUsage(family: "RedHatDisplay", size: 24),
                            Text = $"By {metadata.Artist}, generated by {metadata.GeneratedBy}",
                            Position = new Vector2(0, 38)
                        }
                    }
                });
            }
        }
    }
}
